#include<avr/io.h>
#include<avr/interrupt.h>

int n=0;
const int amostras = 550;

// Step Response
//uint8_t u[amostras] = {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,255,255,255,255,255,255,255,255,
//255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,
//255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,0,0,0,0,
//0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
//0,0,0,0,0,0,0,0,0,0,0,0,0,0,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,
//255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,255,255,255,255,255,255,255,255,255,255,
//255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,
//255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
//0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,255,255,255,255,255,255,255,255,255,255,255,255,255,
//255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,
//255,255,255,255,255,255,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
//};

// Randon response
//550
uint8_t u[amostras] = { 208,231,32,233,161,25,71,139,244,246,40,248,244,124,204,36,108,234,202,245,167,9,217,238,173,193,189,100,167,44,180,8,71,
12,25,210,177,81,242,9,112,97,195,203,48,125,114,165,181,192,70,173,167,41,30,127,245,87,149,57,192,65,129,178,227,245,140,35,38,66,214,65,208,62,
237,89,50,64,157,121,90,212,149,140,234,73,193,192,97,145,19,14,135,199,238,33,145,120,3,86,41,203,79,135,42,154,67,167,176,191,115,21,58,233,39,211,
137,254,20,113,27,245,1,198,208,222,22,102,66,204,110,232,46,67,37,35,222,148,140,37,218,159,89,131,102,19,61,31,47,61,106,13,230,241,125,125,86,230,94
,28,199,99,62,103,25,34,240,244,147,15,60,90,209,4,11,43,166,187,165,115,139,76,190,48,175,47,94,160,199,21,237,198,124,111,114,78,130,130,208,203,164,97,
207,136,89,239,223,140,159,150,53,77,120,59,215,50,58,44,58,111,79,235,110,47,231,250,112,28,66,104,152,67,154,181,57,30,76,81,108,130,22,67,204,7,237,186,
125,148,61,117,246,139,133,59,125,159,173,101,94,252,10,226,233,203,25,67,86,173,35,184,27,167,126,199,182,230,227,85,178,50,8,190,128,122,231,156,158,219,205,
147,47,61,226,7,125,43,250,182,128,120,15,174,11,18,133,25,209,208,184,38,168,132,248,165,204,116,110,210,21,34,44,100,212,205,15,102,134,106,167,160,74,110,4,
251,43,27,95,51,125,87,243,235,13,188,69,108,140,240,107,251,77,179,170,137,178,170,45,33,255,44,8,143,225,171,49,94,117,250,40,218,164,96,49,109,123,31,150,
58,98,149,64,74,157,68,210,251,186,88,149,27,231,224,209,66,152,6,108,80,41,46,108,24,153,120,177,178,163,9,18,81,135,167,104,209,183,247,135,83,27,156,199,
108,23,68,39,72,112,134,117,223,132,241,163,244,61,172,74,171,177,17,65,57,170,215,88,199,172,2,154,99,234,0,118,108,118,196,82,200,120,9,45,184,121,39,87,
155,49,188,62,234,69,195,48,73,23,147,174,139,109,164,165,173,162,241,53,181,60,30,155,115,117,169,196,89,169,106,215,212,65,156,148,138,222,68,81,30,240,165,
122,163,139,165,139,184,133,253,56,27,28,16,103,114,93,195,160,197,238,248,49,35,178,24,134,135,220,124,100,171,189,133,89,38,149,67,11,193,62,113,175,92
};

int y[amostras];
uint8_t flag=0;

void setup()
{
  Serial.begin(9600);
  pinMode(A0, INPUT);

  analogWrite(3,0);
  delay(5000);
  
  cli(); //stop interrupts
  TCCR1A = 0;// clear register
  TCCR1B = 0;// clear register
  TCNT1  = 0;//reset counter
  OCR1A  = 6599; //must be <65536
  //compare match register = [ 16,000,000Hz/ (prescaler * desired interrupt frequency) ] - 1
  TCCR1B |= (1 << WGM12); //CTC On
  // Set prescaler for 1
  TCCR1B |= (0 << CS12) | (0 << CS11) | (1 << CS10);
  // enable timer compare interrupt
  TIMSK1 |= (1 << OCIE1A);
  
  TCCR2B = TCCR2B & B11111000 | B00000001; 

  
  
  sei(); //allow interrupts
}

ISR(TIMER1_COMPA_vect)
{ 
  if(n < amostras){
    n++;
  
     
      analogWrite(3,u[n]);
      y[n] = analogRead(A0);

  }
}

void loop()
{


  if(n>=amostras){
    for(int x=0;x<amostras;x++)
    {
      Serial.print(u[x]);
      Serial.print(", ");
      Serial.println(y[x]);
      }
      delay(10000);
  }


}
